@import "normalize.min";
@import "configs";

html, body{
  height: 100%;
  overflow: hidden;
}

body{
  font-family: 'Montserrat', sans-serif;
  background: url("../image/bg.jpg") center no-repeat;
  background-size: cover;
  position: relative;
  &::after{
    opacity: 0;
    pointer-events: none;
    transition: 0.7s ease-in-out;
    content: '';
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba($secondColor, 0.7);
  }
  &.loaded{
    &::after{
      opacity: 1;
    }
    .mainTitle{
      transform: translateX(0);
    }
  }
}

#main{
  position: relative;
  z-index: 10;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}

.mainTitle{
  font-weight: 600;
  font-size: toResponsiveUnits(70, $desktop);
  color: $accentColor;
  text-align: center;
  transform: translateX(-9999px);
  transition: transform 1s ease-in-out;
}

.shapesWrapper{
  width: 80%;
  height: toResponsiveUnits(400, $desktop);;
  padding: 0 toResponsiveUnits(30, $desktop);
  border-radius: toResponsiveUnits(20, $desktop);
  border: 2px solid $accentColor;
  background: rgba($secondColor, 0.6);
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  .shape{
    display: flex;
    justify-content: center;
    align-items: center;
    color: $accentColor;
    font-weight: 500;
    font-size: toResponsiveUnits(18, $desktop);
    text-align: center;
    border: 2px solid $accentColor;
    padding: toResponsiveUnits(20, $desktop);
    input{
      width: 60%;
      text-align: center;
      border: 1px solid $accentColor;
      border-radius: toResponsiveUnits(5, $desktop);
      padding: toResponsiveUnits(10, $desktop);
      background: transparent;
      color: $accentColor;
      margin-bottom: toResponsiveUnits(15, $desktop);
      outline: none;
    }
    .enterData{
      display: none;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      p{
        font-size: toResponsiveUnits(16, $desktop);
        margin-bottom: toResponsiveUnits(20, $desktop);
      }
    }
    .result{
      display: none;
      flex-direction: column;
      text-align: left;
      span{
        font-size: toResponsiveUnits(19, $desktop);
        font-weight: 600;
        white-space: nowrap;
      }
      .reset{
        margin: toResponsiveUnits(10, $desktop) auto 0 auto;
        width: toResponsiveUnits(100, $desktop);
      }
    }
    button{
      cursor: pointer;
      outline: none;
      border: none;
      background: $accentColor;
      border-radius: toResponsiveUnits(5, $desktop);
      color: $secondColor;
      padding: toResponsiveUnits(5, $desktop) toResponsiveUnits(20, $desktop);
      box-sizing: border-box;
      &:hover{
        background: $secondColor;
        color: $accentColor;
        outline: 1px solid $accentColor;
      }
    }
    &:hover{
      //cursor: initial;
      //.enterData{
      //  display: flex;
      //}
      //p.description{
      //  display: none;
      //}
    }
    &.alreadyCalc{
      .enterData{
        display: none;
      }
      p.description{
        display: none;
      }
      .result{
        display: flex;
      }
    }
    &.square{
      width: toResponsiveUnits(250, $desktop);
      height: toResponsiveUnits(250, $desktop);
    }
    &.rectangle{
      width: toResponsiveUnits(180, $desktop);
      height: toResponsiveUnits(250, $desktop);
    }
    &.circle{
      width: toResponsiveUnits(250, $desktop);
      height: toResponsiveUnits(250, $desktop);
      border-radius: 50%;
    }
    &.triangle{
      width: toResponsiveUnits(350, $desktop);
      margin-top: toResponsiveUnits(30, $desktop);
      border: none;
      padding: 0;
      &:hover{
        svg{
          pointer-events: none;
        }
      }
      svg{
        position: absolute;
        z-index: 10;
        width: toResponsiveUnits(350, $desktop);
      }
      .trianglePic{
        fill: transparent;
        stroke: $accentColor;
        stroke-width: 0.6;
      }
      .description, .enterData, .result{
        width: 50%;
        text-align: center;
        margin: toResponsiveUnits(10, $desktop) auto auto toResponsiveUnits(3, $desktop);
      }
      .result{
        margin-left: toResponsiveUnits(20, $desktop);
        margin-top: toResponsiveUnits(100, $desktop);
      }
      .enterData{
        p{
          width: 30%;
          text-align: left;
          align-self: flex-start;
          padding-left: toResponsiveUnits(5, $desktop);
        }
        input{
          padding: toResponsiveUnits(8, $desktop) 0;
          align-self: flex-start;
          margin-left: toResponsiveUnits(20, $desktop);
          font-size: toResponsiveUnits(12, $desktop);
          &::placeholder{
            text-align: left;
            font-size: toResponsiveUnits(12, $desktop);
            padding-left: toResponsiveUnits(5, $desktop);
            padding-bottom: toResponsiveUnits(5, $desktop);
          }
        }
        .calc{
          position: relative;
          top: toResponsiveUnits(-45, $desktop);
          left: toResponsiveUnits(110, $desktop);
        }
      }
    }
  }
}